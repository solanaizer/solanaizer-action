---
name: 'Github Action for Solanaizer'
description: 'Solana Smart Contract Auditing using AI'

inputs:
  openapi-token:
    required: true

runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v4
  - uses: actions/setup-python@v5
    with:
      python-version: '3.x'

  - shell: bash
    run: |
      python -m pip install --upgrade pip
      python -m pip install requests pathlib


  - name: Comment on PR
    uses: actions/github-script@v7
    env:
      OPENAPI_TOKEN: ${{ inputs.openapi-token }}
    with:
      script: |
        console.log('📜 SOLANAIZER...')
        const execSync = require("child_process").execSync;
        const raw = execSync("python ${{ github.action_path }}/solanaizer.py", { encoding: "utf-8" });
        
        try {
          JSON.parse(raw);
        } catch(e) {
          console.log('INVALID JSON FORMAT FROM 🐍:', raw)
          process.exit(1)
        }


        const data = JSON.parse(raw).map(line => ({
          ...line,
          severity: line.severity === "HIGH" ? "High 🥵" : line.severity === "MEDIUM" ? "Medium 🤷🏻‍♂️" : "Low 😗",
        }));
        
        const table = ["| Severity 🌡️  | Description 💭 | Error Code 😬 | Filename 📜 |"];
        table.push("| :-------------: | ------------- | :-------------: | ------------- |");
        
        if (data.length !== 0) {
          data.forEach(line => {
            table.push(
              `| ${line.severity} | ${line.description} | \`${line.error_code}\` | \`${line.filename}\`<br>Lines: \`
                test
              ` |`,
            );
          });
        }
        
        let body = `## Solanaizer Audit Results 🤖\n\nFind below all the vulnerabilities found in your smart contracts:`

        if (data.length !== 0) {
          body += `\n\n${table.join("\n")})}`
          body += '\n<img src="https://media0.giphy.com/media/Xyj49ooQtsFD16z27J/giphy.gif"/>'
          console.table(data);
        } else {
          body += '\n\n0 vulnerabilities found!\n\n<img src="https://media0.giphy.com/media/Ogak8XuKHLs6PYcqlp/giphy.gif"/>'
          console.log('No vulnerabilities 😘')
        }

        github.rest.issues.createComment({
          issue_number: context.issue.number,
          owner: context.repo.owner,
          repo: context.repo.repo,
          body,
        });
      
        if (data.length !== 0) {
          core.setFailed('Job run failed')
        }

branding:
  icon: lock
  color: black